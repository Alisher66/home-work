// Число 89 - это первое целое число с более чем одной цифрой, которое соответствует свойству, частично представленному в названии этого ката. Что толку говорить «Эврика»? Потому что эта сумма дает столько же.

// Фактически: 89 = 8 ^ 1 + 9 ^ 2

// Следующее число обладателей этого свойства - 135.

// Посмотрите это свойство еще раз: 135 = 1 ^ 1 + 3 ^ 2 + 5 ^ 3

// Нам нужна функция для сбора этих чисел, которая может принимать два целых числа a, b, которые определяют диапазон [a, b] (включительно) и выводят список отсортированных чисел в диапазоне, который выполняет свойство, описанное выше.

// Давайте посмотрим на некоторые случаи:

// sumDigPow (1, 10) == [1, 2, 3, 4, 5, 6, 7, 8, 9]

// sumDigPow (1, 100) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 89]
// Если таких чисел в диапазоне [a, b] нет, функция должна вывести пустой список.

// sumDigPow (90, 100) == []
// Наслаждайся этим!!

function sumDigPow(a, b) {
    let arr = [];
    for(let i = a; i <= b; i++){
        if(digPow(i)) arr.push(i);
    }
    return arr;
}

function digPow(n) {
    let arr = `${n}`.split('');
    let s = 0;
    arr.forEach((el, index) => s += el**(index+1));
    if(n == s) return true;
    else return false;
}


console.log(sumDigPow(1,100))